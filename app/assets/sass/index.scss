@import 'variables';
@import 'mixins';
@import 'starter';

body {
	font-family: $font_family_body;
	font-weight: 400;
	font-size: $baseFontSize;
	line-height: $baseLineHeight;
}

html, body {
	overflow-x: hidden;
}

p {
	@include font-calculator($font_family_body, 14px);
}

h1, h2, h3, h4, h5, h6 {
	font-family: 'Roboto Slab', serif;
	font-weight: 400;
}

h1, h2, h3, h4, h5, h6 {
	@include font-calculator($font_family_header, 20px);
}

// refactor

nav {
	font-weight: 500;
	display: grid;
	grid-template-columns: 50% 50%;
	grid-gap: 0;
	min-height: 70px;
	ul {
		list-style: none;
		li {
			@include font-calculator($font_family_body, 14px, 0);
		}
		a {
			display: inline-block;
		}
		a + a {
			margin-left: 20px;
		}
	}
}

:global .inner-footer {
	font-weight: 500;
	display: grid;
	grid-template-columns: 50% 50%;
	grid-gap: 0;
	min-height: 70px;
	ul {
		list-style: none;
		li {
			@include font-calculator($font_family_body, 14px, 0);
		}
		a {
			display: inline-block;
			color: $footerLinkColour;
		}
		a + a {
			margin-left: 20px;
		}
	}
}

header {
	margin: 0 -9999rem;
	background: $headerBackground;
}

main {
	margin: 10px 0 50px 0;
	h3 {
		@include font-calculator($font_family_body, 22px);
		color: $paragraphColour;
	}

	section {
		display: grid;
		grid-template-columns: repeat(auto-fill, minmax(25%, 1fr));
		grid-auto-rows: minmax(100px, auto);
		grid-gap: 24px;
	}
}

:global .search-form {
	min-height: 44px;
	width: 100%;

	input {
		@include font-calculator($font_family_body, 16px, 0);
		color: $inputFont;
		width: 100%;
		text-align: center;
		min-height: 44px;
	}
}

:global .search-results {
	max-height: 120px;
	overflow: hidden;
	margin-top: 20px;
	> span {
		display: block;
		color: $formResults;
		@include font-calculator($font_family_body, 16px, 0.5);
		line-height: 1em;
	}
	position: relative;
	&::after {
		content: '';
		position: absolute;
		top: 0;
		right: 0;
		height: 100%;
		width: 100%;
		background: linear-gradient(to bottom, rgba(125, 185, 232, 0) 0%, rgba(255, 255, 255, 1) 100%);
	}
}

footer {
	display: grid;
	margin: 0 -9999rem;
	background: $footerBackground;
	border-top: 1px solid $borderBackgroundOne;
}

a:link {
	color: $linkState;
	text-decoration: none;
}

a:visited {
	color: $linkState;
}

a:focus {
	color: $linkState;
}

a:hover {
	color: $linkState;
	text-decoration: underline;
	text-decoration-skip: edges;
	text-decoration-color: $headerColour;
}

a:active {
	color: $linkState;
}

@supports not (text-decoration-color: $headerColour) {
	a:hover {
		color: $headerColour;
	}
}

// global classes

:global .wrapper {
	width: $media_breakpoint_wide;
	margin: 10px auto 0 auto;
}

/* selected link */

:global .hide {
	display: none;
}

/*
* Hide only visually, but have it available for screenreaders: h5bp.com/v
*/

:global .visuallyhidden {
	border: 0;
	clip: rect(0 0 0 0);
	height: 1px;
	margin: -1px;
	overflow: hidden;
	padding: 0;
	position: absolute;
	width: 1px;
}

/* clearfix */

:global .clearfix::before,
:global .clearfix::after {
	content: '\0020';
	display: block;
	height: 0;
	overflow: hidden;
}

:global .clearfix::after {
	clear: both;
}

:global .display-flow-root {
	display: flow-root;
}

:global .flex-center {
	display: flex;
	align-items: center;
	justify-content: center;
}

// new aspect ration techniques here using Grid and SVG:
// https://justmarkup.com/log/2018/03/collection-of-css-snippets
// https://codeburst.io/keeping-aspect-ratio-with-html-and-no-padding-tricks-40705656808b
:global .old-aspect-ratio.video-wrapper {
	position: relative;
	padding-bottom: 56.25%;
	/* 16:9 */
	padding-top: 25px;
	height: 0;
}

:global .old-aspect-ratio.video-wrapper iframe {
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
}

:global .ellipsis {
	max-width: 200px;
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}

:global .truncated {
	display: block;
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
	max-width: 15rem;
}

:global .video-caption {
	@include font-calculator($font_family_body, 14px);
	color: $paragraphColour;
}

