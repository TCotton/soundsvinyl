/***/

// extracted by mini-css-extract-plugin

// const currentPage = (page !== 1 ? ); // work out current page here

// refactor both these API request into one request

// refactor -> use redux

// add empty element so that search form can be placed there

// only add search box on home page

/* eslint-disable */

// EXTERNAL MODULE: ./node_modules/react/index.js

/*#__PURE__*/

// CONCATENATED MODULE: ./node_modules/@researchgate/react-intersection-observer/lib/es/observer.js

/**
 * The Intersection Observer API callback that is called whenever one element
 * – namely the target – intersects either the device viewport or a specified element.
 * Also will get called whenever the visibility of the target element changes and
 * crosses desired amounts of intersection with the root.
 * @param {array} changes
 * @param {IntersectionObserver} observer
 */

// EXTERNAL MODULE: ./node_modules/invariant/browser.js

// CONCATENATED MODULE: ./node_modules/@researchgate/react-intersection-observer/lib/es/IntersectionObserver.js

/**
         * Forward hijacked ref to user.
         */

// check if we didn't unobserve previously due to a prop change

// check we have a previous node we want to unobserve

// CONCATENATED MODULE: ./node_modules/@researchgate/react-intersection-observer/lib/es/index.js

/* concated harmony reexport default */

/* concated harmony reexport parseRootMargin */

/* concated harmony reexport Config */
